name: hydrun CI

on:
  push:
  pull_request:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - id: example-binaries
            src: example
            os: golang:bullseye
            flags: ""
            cmd: ./Hydrunfile
            dst: example/out/*
          - id: example-msi
            src: example
            os: golang:bullseye
            flags: ""
            cmd: ./Hydrunfile msi
            dst: example/out/*.msi
          - id: example-dmg
            src: example
            os: golang:bullseye
            flags: ""
            cmd: ./Hydrunfile dmg
            dst: example/out/*.dmg
          - id: example-apk
            src: example
            os: golang:bullseye
            flags: ""
            cmd: ./Hydrunfile apk
            dst: example/out/*.apk
          - id: example-flatpak
            src: example
            os: debian:bullseye
            flags: -e '--privileged'
            cmd: ./Hydrunfile flatpak
            dst: example/out/*.flatpak
          - id: example-deb
            src: example
            os: debian:sid
            flags: -e '--privileged'
            cmd: ./Hydrunfile deb
            dst: example/out/*
          - id: example-rpm
            src: example
            os: fedora:34
            flags: -e '--privileged'
            cmd: ./Hydrunfile rpm
            dst: example/out/*

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Set up hydrun
        run: |
          curl -L -o /tmp/hydrun "https://github.com/pojntfx/hydrun/releases/latest/download/hydrun.linux-$(uname -m)"
          sudo install /tmp/hydrun /usr/local/bin
      - name: Build with hydrun
        working-directory: ${{ matrix.target.src }}
        env:
          ANDROID_CERT: ${{ secrets.ANDROID_CERT }}
          ANDROID_CERT_PASSWORD: ${{ secrets.ANDROID_CERT_PASSWORD }}
          GPG_KEY: ${{ secrets.GPG_KEY }}
          GPG_KEY_PASSWORD: ${{ secrets.GPG_KEY_PASSWORD }}
          GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
        run: hydrun -o ${{ matrix.target.os }} ${{ matrix.target.flags }} "ANDROID_CERT=\"${ANDROID_CERT}\" ANDROID_CERT_PASSWORD=\"${ANDROID_CERT_PASSWORD}\" GPG_KEY=\"${GPG_KEY}\" GPG_KEY_PASSWORD=\"${GPG_KEY_PASSWORD}\" GPG_KEY_ID=\"${GPG_KEY_ID}\" ${{ matrix.target.cmd }}"
      - name: Fix permissions for output
        run: sudo chown -R $USER .
      - name: Upload output
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.target.id }}
          path: ${{ matrix.target.dst }}
  publish-linux:
    runs-on: ubuntu-latest
    needs: build-linux

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download output
        uses: actions/download-artifact@v2
        with:
          path: /tmp/out
      - name: Isolate the repositories
        run: |
          mkdir -p /tmp/out/github-pages/{apt,yum}

          cp -r /tmp/out/example-deb/repositories/* /tmp/out/github-pages/apt
          cp -r /tmp/out/example-rpm/repositories/* /tmp/out/github-pages/yum
      - name: Publish pre-release to GitHub releases
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: unstable
          prerelease: true
          files: |
            /tmp/out/*/*
            /tmp/out/example-deb/repositories/*/pool/main/*.deb
            /tmp/out/example-rpm/repositories/*/*.rpm
      - name: Publish release to GitHub releases
        if: startsWith(github.ref, 'refs/tags/v')
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            /tmp/out/*/*
            /tmp/out/example-deb/repositories/*/pool/main/*.deb
            /tmp/out/example-rpm/repositories/*/*.rpm
      - name: Publish release to GitHub pages
        if: ${{ github.ref == 'refs/heads/main' }}
        # if: startsWith(github.ref, 'refs/tags/v') # Enable this after releases are ready
        uses: JamesIves/github-pages-deploy-action@4.1.0
        with:
          branch: gh-pages
          folder: /tmp/out/github-pages
          git-config-name: GitHub Pages Bot
          git-config-email: bot@example.com
