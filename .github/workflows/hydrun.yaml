name: hydrun CI

on:
  push:
  pull_request:
  schedule:
    - cron: "0 0 * * 0"

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          # hydrapp-builder
          - id: test.hydrun-builder
            src: .
            os: golang:bullseye
            flags: ""
            cmd: GOFLAGS="-short" ./Hydrunfile test hydrapp-builder
            dst: out/*
          - id: go.hydrun-builder
            src: .
            os: golang:bullseye
            flags: ""
            cmd: ./Hydrunfile go hydrapp-builder
            dst: out/*
          - id: gccgo.hydrun-builder
            src: .
            os: ghcr.io/pojntfx/bagccgop-base-sid
            flags: -e '--privileged'
            cmd: ./Hydrunfile gccgo hydrapp-builder
            dst: out/*

          # com.pojtinger.felicitas.hydrapp.example.full
          - id: test.hydrapp-example-full
            src: .
            os: golang:bullseye
            flags: ""
            cmd: GOFLAGS="-short" ./Hydrunfile test hydrapp-example-full
            dst: out/*
          - id: go.hydrapp-example-full
            src: .
            os: golang:bullseye
            flags: ""
            cmd: ./Hydrunfile go hydrapp-example-full
            dst: out/*
          - id: gccgo.hydrapp-example-full
            src: .
            os: ghcr.io/pojntfx/bagccgop-base-sid
            flags: -e '--privileged'
            cmd: ./Hydrunfile gccgo hydrapp-example-full
            dst: out/*
          - id: hydrapp-apk.hydrapp-example-full
            src: .
            os: golang:bullseye
            flags: -e '--privileged -v /tmp:/tmp -v /var/run/docker.sock:/var/run/docker.sock'
            cmd: ./Hydrunfile hydrapp hydrapp-example-full 'deb|dmg|flatpak|msi|rpm' \"${PWD}\"
            dst: out/*
          - id: hydrapp-deb.hydrapp-example-full
            src: .
            os: golang:bullseye
            flags: -e '--privileged -v /tmp:/tmp -v /var/run/docker.sock:/var/run/docker.sock'
            cmd: ./Hydrunfile hydrapp hydrapp-example-full 'apk|dmg|flatpak|msi|rpm' \"${PWD}\"
            dst: out/*
          - id: hydrapp-dmg.hydrapp-example-full
            src: .
            os: golang:bullseye
            flags: -e '--privileged -v /tmp:/tmp -v /var/run/docker.sock:/var/run/docker.sock'
            cmd: ./Hydrunfile hydrapp hydrapp-example-full 'apk|deb|flatpak|msi|rpm' \"${PWD}\"
            dst: out/*
          - id: hydrapp-flatpak.hydrapp-example-full
            src: .
            os: golang:bullseye
            flags: -e '--privileged -v /tmp:/tmp -v /var/run/docker.sock:/var/run/docker.sock'
            cmd: ./Hydrunfile hydrapp hydrapp-example-full 'apk|deb|dmg|msi|rpm' \"${PWD}\"
            dst: out/*
          - id: hydrapp-msi.hydrapp-example-full
            src: .
            os: golang:bullseye
            flags: -e '--privileged -v /tmp:/tmp -v /var/run/docker.sock:/var/run/docker.sock'
            cmd: ./Hydrunfile hydrapp hydrapp-example-full 'apk|deb|flatpak|dmg|rpm' \"${PWD}\"
            dst: out/*
          - id: hydrapp-rpm.hydrapp-example-full
            src: .
            os: golang:bullseye
            flags: -e '--privileged -v /tmp:/tmp -v /var/run/docker.sock:/var/run/docker.sock'
            cmd: ./Hydrunfile hydrapp hydrapp-example-full 'apk|deb|flatpak|dmg|msi' \"${PWD}\"
            dst: out/*

          # com.pojtinger.felicitas.hydrapp.example.simple
          - id: test.hydrapp-example-simple
            src: .
            os: golang:bullseye
            flags: ""
            cmd: GOFLAGS="-short" ./Hydrunfile test hydrapp-example-simple
            dst: out/*
          - id: go.hydrapp-example-simple
            src: .
            os: golang:bullseye
            flags: ""
            cmd: ./Hydrunfile go hydrapp-example-simple
            dst: out/*
          - id: gccgo.hydrapp-example-simple
            src: .
            os: ghcr.io/pojntfx/bagccgop-base-sid
            flags: -e '--privileged'
            cmd: ./Hydrunfile gccgo hydrapp-example-simple
            dst: out/*
          - id: hydrapp-apk.hydrapp-example-simple
            src: .
            os: golang:bullseye
            flags: -e '--privileged -v /tmp:/tmp -v /var/run/docker.sock:/var/run/docker.sock'
            cmd: ./Hydrunfile hydrapp hydrapp-example-full 'deb|dmg|flatpak|msi|rpm' \"${PWD}\"
            dst: out/*
          - id: hydrapp-deb.hydrapp-example-simple
            src: .
            os: golang:bullseye
            flags: -e '--privileged -v /tmp:/tmp -v /var/run/docker.sock:/var/run/docker.sock'
            cmd: ./Hydrunfile hydrapp hydrapp-example-full 'apk|dmg|flatpak|msi|rpm' \"${PWD}\"
            dst: out/*
          - id: hydrapp-dmg.hydrapp-example-simple
            src: .
            os: golang:bullseye
            flags: -e '--privileged -v /tmp:/tmp -v /var/run/docker.sock:/var/run/docker.sock'
            cmd: ./Hydrunfile hydrapp hydrapp-example-full 'apk|deb|flatpak|msi|rpm' \"${PWD}\"
            dst: out/*
          - id: hydrapp-flatpak.hydrapp-example-simple
            src: .
            os: golang:bullseye
            flags: -e '--privileged -v /tmp:/tmp -v /var/run/docker.sock:/var/run/docker.sock'
            cmd: ./Hydrunfile hydrapp hydrapp-example-full 'apk|deb|dmg|msi|rpm' \"${PWD}\"
            dst: out/*
          - id: hydrapp-msi.hydrapp-example-simple
            src: .
            os: golang:bullseye
            flags: -e '--privileged -v /tmp:/tmp -v /var/run/docker.sock:/var/run/docker.sock'
            cmd: ./Hydrunfile hydrapp hydrapp-example-full 'apk|deb|flatpak|dmg|rpm' \"${PWD}\"
            dst: out/*
          - id: hydrapp-rpm.hydrapp-example-simple
            src: .
            os: golang:bullseye
            flags: -e '--privileged -v /tmp:/tmp -v /var/run/docker.sock:/var/run/docker.sock'
            cmd: ./Hydrunfile hydrapp hydrapp-example-full 'apk|deb|flatpak|dmg|msi' \"${PWD}\"
            dst: out/*

    steps:
      - name: Maximize build space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Set up hydrun
        run: |
          curl -L -o /tmp/hydrun "https://github.com/pojntfx/hydrun/releases/latest/download/hydrun.linux-$(uname -m)"
          sudo install /tmp/hydrun /usr/local/bin
      - name: Build with hydrun
        working-directory: ${{ matrix.target.src }}
        env:
          PGP_KEY: ${{ secrets.PGP_KEY }}
          PGP_PASSWORD: ${{ secrets.PGP_PASSWORD }}
          PGP_ID: ${{ secrets.PGP_ID }}
          APK_CERT: ${{ secrets.APK_CERT }}
          APK_STOREPASS: ${{ secrets.APK_STOREPASS }}
          APK_KEYPASS: ${{ secrets.APK_KEYPASS }}
        run: hydrun -o ${{ matrix.target.os }} ${{ matrix.target.flags }} "PGP_KEY=\"${PGP_KEY}\" PGP_PASSWORD=\"${PGP_PASSWORD}\" PGP_ID=\"${PGP_ID}\" APK_CERT=\"${APK_CERT}\" APK_STOREPASS=\"${APK_STOREPASS}\" APK_KEYPASS=\"${APK_KEYPASS}\" ${{ matrix.target.cmd }}"
      - name: Fix permissions for output
        run: sudo chown -R $USER .
      - name: Upload output
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.target.id }}
          path: ${{ matrix.target.dst }}
  publish-linux:
    runs-on: ubuntu-latest
    needs: build-linux

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download output
        uses: actions/download-artifact@v2
        with:
          path: /tmp/out
      - name: Isolate the repositories
        run: |
          mkdir -p /tmp/github-pages
          for dir in /tmp/out/hydrapp-*/*/; do
            sudo mv "${dir}" /tmp/github-pages/
          done
      - name: Publish pre-release to GitHub releases
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: unstable
          prerelease: true
          files: |
            /tmp/out/*/*
      - name: Publish release to GitHub releases
        if: startsWith(github.ref, 'refs/tags/v')
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            /tmp/out/*/*
      - name: Publish release to GitHub pages
        # if: startsWith(github.ref, 'refs/tags/v') # Uncomment on first release
        if: ${{ github.ref == 'refs/heads/main' }} # Comment on first release
        uses: JamesIves/github-pages-deploy-action@4.1.0
        with:
          branch: gh-pages
          folder: /tmp/github-pages
          git-config-name: GitHub Pages Bot
          git-config-email: bot@example.com
